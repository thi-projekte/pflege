name: Build, Push and Deploy using Portainer API

on:
  push:
    paths:
      - 'homepage/pflegital/**'
      - 'homepage/Dockerfile'

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/thi-projekte/pflege/homepage:latest
          docker build -f homepage/Dockerfile -t $IMAGE_NAME homepage
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME

      - name: Update Container via Portainer API
        env:
          API_URL: https://portainer.winfprojekt.de/api
          API_KEY: ${{ secrets.PORTAINER_API_KEY }}
        run: |
          # Container Name
          CONTAINER_NAME="homepage"

          # Endpoint ID (1 ist standardmäßig der erste Endpoint, ggf. anpassen)
          ENDPOINT_ID=1

          # Hole die Container-ID basierend auf dem Namen
          CONTAINER_ID=$(curl -s -H "Authorization: Bearer $API_KEY" "$API_URL/endpoints/$ENDPOINT_ID/docker/containers/json" | jq -r ".[] | select(.Names[] | contains(\"${CONTAINER_NAME}\")) | .Id")

          if [ -z "$CONTAINER_ID" ]; then
            echo "Container not found!"
            exit 1
          fi

          echo "Container ID: $CONTAINER_ID"

          # Pull das neueste Image
          echo "Pulling latest image..."
          curl -X POST -H "Authorization: Bearer $API_KEY" \
               "$API_URL/endpoints/$ENDPOINT_ID/docker/images/create?fromImage=ghcr.io/thi-projekte/pflege/homepage&tag=latest"

          # Container neu starten
          echo "Restarting container..."
          curl -X POST -H "Authorization: Bearer $API_KEY" \
               "$API_URL/endpoints/$ENDPOINT_ID/docker/containers/$CONTAINER_ID/restart"
